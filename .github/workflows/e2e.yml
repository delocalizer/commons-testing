name: e2e

on:
  workflow_dispatch: {}  # manual trigger

permissions:
  contents: write  # needed to push to gh-pages

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      # 1) Runtime config
      BASE_URL: ${{ vars.BASE_URL }}
      USER_TIER2_USERNAME: ${{ secrets.USER_TIER2_USERNAME }}
      USER_TIER2_PASSWORD: ${{ secrets.USER_TIER2_PASSWORD }}

    steps:
      - uses: actions/checkout@v4

      # 2) Python + Poetry + deps
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install project dependencies (Poetry)
        run: poetry install --no-interaction --no-ansi --only test

      # 3) Playwright browsers / OS deps (no caching yet)
      - name: Install Playwright browsers and deps
        run: poetry run python -m playwright install --with-deps

      # 4) Run tests and write HTML report to playwright-report/report.html
      - name: Run pytest (generate HTML report)
        run: |
          mkdir -p playwright-report
          poetry run pytest

      # 5) Publish the report as a workflow artifact (visible on the run page)
      - name: Upload HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 14

      # 6) Publish the report to gh pages
      - name: Upload HTML report artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          overwrite: true
          retention-days: 30

  deploy-pages:
    name: Publish report to GitHub Pages
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout gh-pages branch (if exists)
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: ghp           # checkout into ./ghp; if branch doesn't exist, this step still creates the folder

      - name: Download report artifact
        uses: actions/download-artifact@v4
        with:
          name: playwright-report
          path: _report_in/

      - name: Stage site (preserve history, add new run, rebuild index)
        run: |
          set -euo pipefail

          mkdir -p public
          if [ -d ghp ]; then
            rsync -a --delete --exclude='.git' ghp/ public/
          fi

          # Add this run under runs/run-<run_number>/
          run_dir="public/runs/run-${{ github.run_number }}"
          mkdir -p "$run_dir"
          mv _report_in/report.html "$run_dir/report.html"

          # Rebuild a static index.html listing all runs (newest first)
          mkdir -p public/runs
          {
            echo '<!doctype html><meta charset="utf-8"><title>E2E Reports</title>'
            echo '<style>body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif;margin:2rem}h1{margin:.2rem 0}.muted{color:#666}ul{line-height:1.8}</style>'
            echo '<h1>Test Reports</h1><p class="muted">History of published runs.</p><ul>'
            if [ -d public/runs ]; then
              # list run-* dirs, sort numerically desc on the run number
              find public/runs -maxdepth 1 -type d -name 'run-*' -printf '%f\n' \
              | sed -E 's/run-([0-9]+)/\1 run-&/' \
              | sort -nr \
              | cut -d' ' -f2 \
              | while read -r d; do
                  if [ -f "public/runs/$d/report.html" ]; then
                    echo "<li><a href=\"runs/$d/report.html\">$d</a></li>"
                  else
                    echo "<li><a href=\"runs/$d/\">$d</a></li>"
                  fi
                done
            fi
            echo '</ul>'
            # Link back to repo run
            echo '<p class="muted">Latest: run-${{ github.run_number }} from <a href="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}">this workflow run</a>.</p>'
          } > public/index.html

      - name: Publish to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: public
          keep_files: true
          commit_message: "Publish report for run ${{ github.run_number }}"
